{ config, inputs, lib, pkgs, ... }:
{
  # Services, packages, and configurations for my OS. 
 
  # Import hardware configurations (these were autogenerated for my desktops partitions).
  imports = [ ./hardware.nix ];

  # Allow unfree software and flakes.
  nixpkgs.config.allowUnfree = true;
  nix = {
    settings.allowed-users = [ "carson" ];
    extraOptions = ''
      experimental-features = nix-command flakes
    '';
  };
 
  # Use the systemd-boot EFI boot loader.
  boot = {
    loader = {
      systemd-boot = {
        enable = true;
        configurationLimit = 5;
      };
      efi.canTouchEfiVariables = true;
    }; 
  };

  # Select internationalisation properties.
  i18n.defaultLocale = "en_US.UTF-8";
  i18n.extraLocaleSettings = {
    LC_ADDRESS = "en_US.UTF-8";
    LC_IDENTIFICATION = "en_US.UTF-8";
    LC_MEASUREMENT = "en_US.UTF-8";
    LC_MONETARY = "en_US.UTF-8";
    LC_NAME = "en_US.UTF-8";
    LC_NUMERIC = "en_US.UTF-8";
    LC_PAPER = "en_US.UTF-8";
    LC_TELEPHONE = "en_US.UTF-8";
    LC_TIME = "en_US.UTF-8";
  };

  # Set timezone.
  time.timeZone = "America/Chicago";
  
  programs = {
		dconf.enable = true;
    gnupg.agent.enable = true;
    bash.enableLsColors = false;

    direnv = {
      enable = true;
      nix-direnv.enable = true;
    };
  };

  services = {
    xserver = {
      enable = true;
      videoDrivers = [ "nvidia" ];
     
      # Not using a full display manager, 
      # I just use run startx from the shell after login if needed.
      displayManager.startx.enable = true;

      # Tiling window manager.
      windowManager.spectrwm.enable = true;

      # Caps -> Ctrl.
      xkb = {
        layout = "us";
        options = "ctrl:swapcaps";
      };
    };
    
    openssh.enable = true;
  };

  # Add hack nerdfont
  fonts = {
    packages = with pkgs; [
      (nerdfonts.override { fonts = [ "Hack" ]; } )
    ];
  };

  # Video and Sound
  sound.enable = true;
  hardware = {
    opengl = {
      enable = true;
      driSupport32Bit = true;
      driSupport = true;
    };
		bluetooth = {
			enable = true;
			powerOnBoot = true;
 		};
    pulseaudio = {
      enable = true;
      support32Bit = true;
    };
    nvidia = {
      modesetting.enable = true;
      package = config.boot.kernelPackages.nvidiaPackages.stable;
    };
  };
 
  
  # Add users and their packages.
  users = {
    users = {
      carson = {
        isNormalUser = true;
        extraGroups  = [ "wheel" ];
        packages = [
				  pkgs.chromium
				  pkgs.dmenu
				  pkgs.htop
          pkgs.hsetroot
          pkgs.wezterm
          pkgs.picom
          pkgs.pfetch
          pkgs.scrot
          pkgs.ripgrep
          pkgs.gh

          # Neovim nightly and plugins
          inputs.neovim-nightly.packages.${pkgs.system}.default
          pkgs.vimPlugins.oil-nvim
          pkgs.vimPlugins.telescope-nvim
          pkgs.vimPlugins.nvim-lspconfig
          pkgs.vimPlugins.nvim-treesitter.withAllGrammars
        ];
      };
    };
  };

	# Global packages
  environment.systemPackages = [ 
    pkgs.tmux
    pkgs.git
    pkgs.unzip
    pkgs.zip
    pkgs.wget
    pkgs.vim
    pkgs.xlockmore
  ];
 
  networking = {
    networkmanager.enable = true;
    hostName = "box";
  };

  system.stateVersion = "24.05";
}
